Creating the Device Files:
==========================

Dynamic Device File Creation in Linux:
**************************************
1. In Linux, the Device files are created dynamically i.e. on-demand.
2. The 'udev' (short for User-space /dev) is the Device manager for Linux Kernel. It is used to dynamically create/remove the Device files as the HW are added/removed.
	1) The Kernel detects a Device getting added/removed/state-changed (hot plug-in events) and generates a 'uevent'.
	2) The 'udevd' is the part of the 'udev' system which handles these 'uevent' to populate/clear the "/dev" directory with the Device files dynamically.
	3) The 'udev' relies heavily on the "/sys/class" directory to gather information about the Devices.
3. The 'udevd' is the User-space daemon for managing the Device events on the Linux Kernel. It is also known as 'systemd-udevd' in the modern systems.
	1) It is always running in the background and listens to the 'uevent' generated by the Kernel.
	2) It parses the Device information such as Vendor ID, Product ID, Serial-number etc.
	3) It applies the 'udev rules' to manage the Device nodes, permissions, names, and symbolic links.
	4) It creates/removes the Device files in "/dev".
	5) It sets permissions, ownership and creates the symbolic links for easier Device identification.
4. The "/sys/class" is a part of the VFS provided by the Kernel.
	1) Each sub-directory in the "/sys/class" corresponds to a Device class like 'block', 'net', 'tty' etc.
	2) These sub-directories contain symbolic links to the actual Device objects in "/sys/devices".
	3) These Device objects contain attributes like 'dev', 'subsystem', 'device', 'events' etc.
4. The 'udev' rules and configurations are placed in the following location:
	1) /etc/udev/rules.d/ => The Admin-defined rules.
	2) /lib/udev/rules.d/ => The System-supplied rules.
	3) /etc/udev/udev.conf => The main configuration file.
