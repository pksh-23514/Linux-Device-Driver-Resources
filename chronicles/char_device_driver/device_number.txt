Device Number:
==============
1. The Kernel connects the System-calls to the specific operation implementation of the intended Driver.
2. This connection is established by the Kernel by using the Device number for the Driver.
3. Char Devices are accessed through names (also called Device files) in the file-system located in the "/dev" directory.
4. The Device number for a particular Device are a pair of two numbers: Major and Minor number.
5. The same Driver is capable of handling multiple Devices, therefore there is a pair of Device number to identify the intended Device.
	=> The Major number identifies the Driver associated with the Device.
	=> The Minor number identifies the Device instance (exact HW Device).
6. The Syntax for the Device number is as visible for the Device is:
	---> Major number , Minor number
7. The System-calls are made to the particular Device file (/dev/DEVICE) and are handled by the VFS in the Kernel-space.
8. The VFS compares the Device number with the Driver registration table in the Kernel and picks the correct Driver.
9. Based on the Driver selected by the VFS, the Kernel connects the System-calls to the specific operation implementation in the Driver.

dev_t Type and kdev_t Header file:
**********************************
1. In Linux, 'dev_t' is a Data-type used to represent a Device number which combines both a Major and Minor number.
2. Within the Linux Kernel, the 'dev_t' Data-type defined in the Header file <linux/types.h> is used to hold the Device numbers.
3. 'dev_t' is a Typedef used to represent the Major and Minor number. It is a 32-bit unsigned Integer where:
	=> the upper 12 bits store the Major number.
	=> the lower 20 bits store the Minor number.
4. In the Header file <linux/kdev_t.h>, there are Macros defined wrt the Major and Minor numbers:
	=> MAJOR(dev_t dev) - To extract the Major number.
	=> MINOR(dev_t dev) - To extract the Minor number.
	=> MKDEV(int major, int minor) - To convert the Major and Minor numbers into 'dev_t' Data-type.
